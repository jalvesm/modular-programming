Ex2) CONTA DE FATURAMENTO (FATURA)
-> emitir conta de faturamento 

Conta de faturamento possui:
-> identificador da unidade faturada (dado)
-> leitura do relógio atual (dado)
-> leitura do relógio do mês anterior (dado)

-> Calcular consumo da unidade: 
        consumoEmKWh = (leitura do relógio atual - leitura do relógio do mês anterior);  
-> calcular valor total da fatura (preço a pagar pelo titular da conta):
                valor do consumo = total consumo em KWh * 0,79
                taxa de iluminação publica = R$12,75 
                valor parcial = taxa de iluminação + valor do consumo
                imposto = 0,18 * valor parcial

- MÉTODOS
+ getIdCliente()
+ getIdentificadorUnidade()
+ getLeituraRelogioMesAnterior(Int idUnidade, Int idCliente)
+ getLeituraRelogioMesVigente(Int idUnidade, Int idCliente)
+ calculaConsumoDeEnergia(Double leituraRelogioMesVigente, Double leituraRelogioMesAnterior): Double
+ calculaConsumoEmReais(Double totalConsumoEmKwh): Double
+ calculaValorParcialDaFatura(Double valorConsumoEmReais): Double
+ calculaImposto(Double valorParcialDaFatura): Double
+ calculaFatura(): Double

DADOS
- VALORKWH: Double                    // 0.79
- TAXAILUMINACAOPUBLICA: Double       // 12.75
- TAXAIMPOSTO: Double                 // 0.18
- idUnidade: Int
- idCliente: Int
- leituraRelogioMesVigente: Double
- leituraRelogioMesAnterior: Double 
- totalConsumoEmKwh: Double
- valorConsumoEmReais: Double 
- valorParcialDaFatura: Double
- valorTotalFatura: Double


Ex3)

classe PARTIDA

static quartoVigente;
static int[] pontuacaoEquipeA;
static int[] pontuacaoEquipeB;

AÇÕES
-> Marcar (adicionar) pontuação(int pontuação)
        pontuacaoEquipeA[quartoVigente] = pontuação;
        quartoVigente++

-> Somar pontuação final(int[] array)
        for (int i = 0; i <= len.array; i++)
                soma
                return somaDoVetor

-> Somar pontuação()
        Para cada posição do vetor
                soma o valor e armazena na soma
        retorna soma

-> define equipe vencedora()
        somaA = Somar pontuação(pontuacaoEquipeA)
        somaB = Somar pontuação(pontuacaoEquipeB)

        Se (somaA > somaB)
                return imprime "Equipe vencedora: A"
        senãose
                return imprime "Equipe vencedora: B"
        senão 
                imprime "deu empate! Redirecionando para prorrogação";
                Marcar (adicionar) pontuação()

-> Imprime vetor()
        Para (cada posição do vetor)
                imprime posição

-> Imprimir placar()
        imprime vetor (Periodos)
        imprime vetor (Equipe A)
        imprime vetor (Equipe B)

-> Main()
        input: Adicionar pontuação:
                Equipe A = Marcar pontuação equipe A
                Equipe B = Marcar pontuação equipe A
        quartoVigente++;

        define equipe vencedora()
        Imprimir placar()

        FIM




SUBSTANTIVOS
-> Soma da Pontuação da Equipe A: 
-> Soma da Pontuação da Equipe B
-> Periodos = [ , Q1, Q2, Q3, Q4, PR, ...]
-> pontuação Equipe A
-> pontuação Equipe B
-> equipe vencedora 

Qual é o quarto?
-> quartoVigente (1, 2, 3, 4, 5, ...)

